== 2.3.3 released 2009-09-02

* Split out merging scopes with 'or' into a convenient method.

== 2.3.2 released 2009-08-26

* Add in scope_procedure as an alias for alias_scope.
* Fixed bug with not_blank condition.

== 2.3.1 released 2009-08-24

* Added blank and not_blank conditions.
* Made User.whatever_like_any("val1", "val2") consistent with User.whatever_like_any(["val1", "val2"])

== 2.3.0 released 2009-08-22

* Thanks to laserlemon for support of ranges and arrays in the equals condition.
* Added feature to combine condition with 'or'.

== 2.2.3 released 2009-07-31

* Fixed bug when an associations named scope joins is a string or an array of strings, the joins we add in automatically should also be a string, not a symbol.

== 2.2.2 released 2009-07-31

* Fix bug to give priority to local columns.

== 2.2.1 released 2009-07-30

* Use ::ActiveRecord instead of ActiveRecord to avoid a name conflict since ActiveRecord is a module within Searchlogic.

== 2.2.0 released 2009-07-30

* Refactored association code to be much simpler and rely on recursion. This allows the underlying class to do most of the work. This also allows calling any named scopes through any level of associations.

== 2.1.13 released 2009-07-29

* Applied bug fix from http://github.com/skanev/searchlogic to make #order work with association ordering.
* Applied bug fix to allow for custom ordering conditions.

== 2.1.12 released 2009-07-28

* Fixed bug when dealing with scopes that return nil.

== 2.1.11 released 2009-07-28

* Reworked how alias conditions are created on the fly, uses scope(:find) instead of proxy_options to create the scope. This allows using association alias named scopes.

== 2.1.10 released 2009-07-28

* Ignore polymorphic associations when dynamically creating conditions on associations.

== 2.1.9 released 2009-07-28

* Fixed bug when cloning with no scope
* Allow the call of foreign pre-existing named scopes instead of those generated by searchlogic. Allows you to call named scopes on associations that you define yourself.

== 2.1.8 released 2009-07-15

* Added support for not_like, not_begin_with, not_end_with, and not_null

== 2.1.7 released 2009-07-14

* Add support for time zones in the Search class when type casting to Time objects.

== 2.1.6 released 2009-07-13

* Fix bug when trying to set conditions on conflicting column names with associations. Ex: User.has_many :orders, User.order_count_gt(10) would raise an exception because it was trying to set conditions on the count column for the orders table.

== 2.1.5 released 2009-07-12

* Check for the existence of id before undefining it, fixes bug in ruby 1.9

== 2.1.4 released 2009-07-12

* Add ActiveRecordConsistency module to help AR remove duplicate joins easier.

== 2.1.3 released 2009-07-12

* Added a no conflic resolution for other libraries already using the "search" method. If you have a conflict, use "searchlogic".
* Put the hidden order field in a div, to be valid XHTML.

== 2.1.2 released 2009-07-04

* Undefine the id method for the Search class, so that it acts like a condition.

== 2.1.1 released 2009-06-28

* Added inner_join convenience method.

== 2.1.0 released 2009-06-28

* Added a delete method to the Search class to allow the deleting of conditions off of the object.
* Add alias_scope feature, lets your create "named scopes" that represent a procedure of named scopes, while at the same time telling Searchlogic it is safe to use in the Search class.
* Use url_for as the default with form_for since rails does some magic to determine the url to use.
* Switched to using inner joins instead of left outer joins.

== 2.0.1 released 2009-06-20

* Allow the chaining of conditions off of a search object. Ex: search.username_like("bjohnson").age_gt(20).all
* Split out left outer join creation into its own method, allowing you to use it in your own named scopes.
* Make sure the search objects clone properly.
* named_scope_options should return the proper options for existing named scopes with an arity greater than 0

== 2.0.0

* Everything, completely rewritten.

== 1.6.6

* Fixed time zone issues when searching.

== 1.6.5 released 2009-04-2

* Skip all associations defined with the :finder_sql option, since conditions can not be chained to them, etc.
* Fixed bug when using non string values for the keywords condition.
* Fixed undefined methods link_options error.
* Return blank conditions when trying to scope blank conditions. Fixes the issue with groups that return a blank SQL string.
* Fixed issue with blank condition comparing boolean values to non boolean columns.
* Add utf-8 magic comment for ruby 1.9

== 1.6.4 released 2009-01-22

* Fixed calling attribute_condition with newer versions of rails.

== 1.6.3 released 2008-12-13

* Added in avg, count, and sum modifiers for SQLite and Postgres.
* Added ne for not_equal condition.
* Ignore :include option for calculations since we don't need it and AR throws an error for polymorphic relationships.
* Removed sum and count since they can not be in the WHERE statement, but must be in the HAVING statement
* Added in auto joins for groups so that the joins don't have to be manually specified.
* Use first column in column_names as the default column for calculations, since a column is required when using DISTINCT and some tables can have more than one primary key.
* On associations see what the first conditions "any" status is to determine if to join with "ANY" or "AND"

== 1.6.2 released 2008-12-13

* Remove duplicate joins at a lower level for a cleaner and less brittle approach.

== 1.6.1 released 2008-12-8

* Group multi faceted conditions since we allow for the mix of "and" and "or"
* Blank arrays are not meaningful values for conditions
* Add in a unique identifier for the auto-generated hidden fields so that multiple forms do no present a problem.

== 1.6.0 released 2008-12-8

* Converted all tree conditions to nested set conditions for performance reasons. A nested set data structure is now required instead of a tree
* Added DISTINCT to select if you are not provided a select, searching, and have joins.
* Included :not_like in the list of conditions to be required upon initialization.

== 1.5.10 released 2008-12-8

* Create class level conditions upon instantiation to avoid conflicts.

== 1.5.9 released 2008-12-3

* Added metaclass object extension for older version of ActiveSupport.
* Added average, count, and sum modifiers.

== 1.5.8 released 2008-12-3

* Removed array support for groups, arrays will set conditions, not create multiple groups. If you need to create multiple groups you will have to pass an array with multiple {:group => my_groups} hashes.
* Fixed issues with using name spaced models.
* Added support for multiparameter conditions to support date_select helpers.

== 1.5.7 released 2008-11-30

* Fixed how grouping works, you can now specify "and_group" and "or_group", just like you can with conditions.
* Specifying a join type will take priority. So "and_name_like" will ALWAYS join with AND, even is any = true for the search.

== 1.5.6 released 2008-11-29

* The order conditions are set is now relevant and will be reflected in the SQL. Setting a condition first will make it first in the SQL, setting a condition last will make it last in the SQL.
* The above allows for prefixing any condition with and_ or or_. Thus letting you create somewhat more complex queries, since the order matters.
* Added ability to group conditions to mimic parenthesis in raw SQL.
* Major clean up in the Searchlogic::Conditions name space: faster, smaller, cleaner, and modular.

== 1.5.5 released 2008-11-17

* Cleaned up class_name configuration for helpers, so that setting them to nil disables the class name
* Added page_links_div_wrapper and page_links_div_wrapper_class_name configuration option to add an wrapping div around page_links
* Added page_links_act_like_will_paginate configuration option to help with the transition from will_paginate

== 1.5.4 released 2008-11-16

* Removed subclass requirement for adding conditions in Conditions::Base
* Removed DISTINCT in the select clause, instead called uniq! on the results. PostgreSQL complains about DISTINCT and AR uses uniq! when using :includes, so this is the best option.
* Converted the return for SQLite's strftime to integer from string. This way day of month, day of year, etc works as expected.

== 1.5.3 released 2008-10-30

* Removed ilike conditions and let the like condition determine if it should use like or ilike depending on the connection adapter.
* Fixed bug where the keywords condition was removing foreign characters.
* Added configuration option for specifying your javascript library, to cut down on the javascript Searchlogic adds into the form helpers
* Fixed bug with "not" conditions to use sanitize method, like it should, instead of to_conditions.
* Only pass :distinct option for the count calculation
* Fixed not_nil and not_blank conditions to use boolean values configuration option.

== 1.5.2 released 2008-10-21

* Added ilike conditions
* Removed configatron dependency (was accidentally added)

== 1.5.1 released 2008-10-20

* Fixed bug with per_page_links
* Added "ordering_by" class for per_page_links

== 1.5.0 released 2008-10-20

* Merge array of conditions with or or and where it makes sense. Begins with condition does not make sense to join with and, so instead join with or.
* Cleaned up html validity so it will pass W3C validators
* Restructure configuration to be more organized and allow for more configuration options.
* Added more configuration options, especially for class names.

== 1.4.1 released 2008-10-15

* Extracted english text into configuration to support alternate languages. I18n support.
* Improved method detection in add_joins to use respond_to? with the private method option set to true

== 1.4.0 released 2008-10-15

* Fixed bug when duping or cloning to copy over instance vars instead of method values
* Fixed bug with older versions of ActiveRecord and creating an alias method chain on find in AssociationCollection
* Added modifiers: upper, lower, trim, ltrim, rtrim
* Added not_nil and not_blank conditions
* Modified conditions so that table name is a variable, this allows table name to be switched on the fly.
* Modified auto joins to return symbols instead of SQL. This allows AR to properly merge the joins and ultimately result in proper SQL when performing multiple complex scopes.
* Fixed conflicts between includes and joins, duplicate joins are not added. Includes are prioritized. This also makes ActiveRecord much more flexible. Now you can cherry pick included associations. And not have to worry about conflicting with joins.
* Modified ActiveRecord's default behavior to use inner joins with the :joins option. Inner joins impose limitations. When providing this as a "convenience", inner joins do not make sense. The don't allow OR conditions to be across associations, nor does it properly order when an ordering by an association attribute when that association is optional.

== 1.3.5 released 2008-10-08

* Since joins are now strings, AR doesn't know how to merge them properly. So searchlogic now checks which joins to skip over to avoid conflicts.

== 1.3.4 released 2008-10-07

* Fixed method names creation for conditions with modifiers
* Create local column conditions, incase there are method conflicts. Such as "id".
* All joins are switched to left outer joins. When search with *any* conditions, inner joins return incorrect results. Also when ordering by an association that allows for blanks, inner joins exclude the records with blank values. Only option is left outer joins.
* If joins is manually set with a string, treat it as SQL, just like ActiveRecord

== 1.3.3 released 2008-10-03

* Fixed modifiers being double escaped on equals condition
* Fixed bug when merging conditions with array substitutions
* Updated blank condition to check if the values is false or not
* Fixed type for the year modifier in the mysql adapter

== 1.3.2 released 2008-10-03

* Fixed condition to type cast all values in an array
* Fixed bug to properly set the type for the type cast column
* Fixed bug to allow conditions on local columns
* Apparently ActiveRecord 2.2 doesnt remove duplicates on all joins, need to enforce this for ALL versions of ActiveRecord
* Fixed bug when passing a symbol as the SQL type for condition return types
* Moved duplicate removal to only apply when searching or calculating from a search object. Anything done in a normal ActiveRecord method should remain untouched and let ActiveRecord handle it. Just like in ActiveRecord if you do a User.all search and pass some :joins, you might get duplicate records. Searchlogic should not change that behavior, unless called from a searchlogic object.
* Discard meaningless array values when setting a condition.
* Delete blank strings from mass assignments on conditions.

== 1.3.1 released 2008-10-02

* Fixed bug when requiring a connection adapter that is not present
* Fixes bug in "not" conditions

== 1.3.0 released 2008-10-02

* Added modifiers into the mix: hour_of_created_at_less_than = 10, etc.
* Changed how the Searchlogic::Conditions::Base class works. Instead of predefining all methods for all conditions upon instantiation, they are defined as needed via method_missing. Similar to
  ActiveRecord's dynamic finders: User.find_by_name_and_email(name, email). Once the are defined they never hit method_missing again, acts like a cache.
* Altered how values are handled for each condition, meaningless values are ignored completely.
* Added in more "not" conditions: not_like, not_begin_with, not_have_keywords, etc

== 1.2.2 released 2008-09-29

* Fixed bug when reverse engineering order to order_by, assumed ASC and DESC would always be present when they are not.
* False is a meaningful value for some conditions, and false.blank? == true. So instead of using value.blank? to ignore conditions we use meaningless?(value), which returns false if it is false.
* Fixed aliases for lt, lte, gt, and gte.
* Fixed bug when writing conditions on associations via a hash with string keys
* Added Config.remove_duplicates to turn off the "automatic" removing of duplicates if desired.
* Updated searchlogic_state helper to insert the entire state all at once.
* Added CSS class "ordering" to order_by_link if the search is being ordered by that.

== 1.2.1 released 2008-09-25

* Fixed problem when determining if an order_by_link is currently being ordered. Just "stringified" both comparable values.
* Removed default order_by and order_as. They will ONLY have values if you specify how to order, otherwise they are nil.
* Removed order_as requirement. order_as is optional.
* Added in deep_merge methods for hash, copied over from ActiveSupport 2.1
* Improved order by auto joins to be based off of what order_by returns instead of setting it when setting order_by.
* Added priority_order_by. Useful if you want to order featured products first and then order as usual. See documentation in Searchlogic::Search::Ordering for more info.
* Added in base64 support for order_by and priority_order_by so that it's value is safe in the URL
* Added priority_order_by_link

== 1.2.0 released 2008-09-24

* Added searchlogic_params and searchlogic_url helper to use outside of the control type helpers.
* Added dup and clone methods that work properly for searchlogic objects
* Fixed bug to remove nil scope values, HABTM likes to add :limit => nil
* Removed unnecessary build_search methods for associations
* Removed support for searching with conditions only. This just made things much more complicated when you can accomplish the same thing by starting a new search and only setting conditions.
* Fixed bug when searching with *any* conditions to use left outer joins instead of inner joins.

== 1.1.3 released 2008-09-23

* Setting a condition to nil removes it if the condition is set to ignore blanks
* Setting search.conditions = "some sql" will reset ALL conditions. Alternatively search.conditions => {:first_name_contains => "Ben"} will overwrite "some sql". The same goes with search.conditions.first_name_contains = "Ben".
* Fixed bug with inspect
* Other small performance enhancements with memoized attributes

== 1.1.2 released 2008-09-22

* Fixed bug with select control types not using :search_obj to determine its select values.
* Added is_nil and is_blank condition types.
* "memoized" various attributes for performance enhancements
* Removed the :order option from calculation options when :order is useless and just slows down query.
* Switched from using :include to :joins, big performance increase

== 1.1.1 released 2008-09-19

* Fixed typo in "next page" button.
* Updated valid options for searching and performing calculations, fixed some bugs when searching and performing calculations with advanced options.
* Fixed bug in ordering where table name was assumed by the hash. Now assumed by the reflection.
* Added default for per_page, so pagination comes implemented by default
* On mass assignments blank strings for *any* conditions are ignored. Sometimes blank strings are meaningful for "equals" and "does not equal", those only takes effect if you explicitly call these conditions: search.conditions.name = "". User.new_search(:conditions => {:name => ""}) will be ignored. Also, Searchlogic should never change how ActiveRecord behaves by default. So User.all(:conditions => {:name => ""}) will NOT be ignored.

== 1.1.0 released 2008-09-18

* Added the options :inner_spread and :outer_spread to the page_links helper. Also added various config options for setting page_links defaults.
* Updated calculation methods to ignore :limit and :offset. AR returns 0 or nil on calculations that provide an offset.
* Added support to allow for "any" of the conditions, instead of all of them. Joins conditions with "or" instead of "and". See Searchlogic::Conditions::Base or the readme

== 1.0.4 released 2008-09-18

* Fixed bugs when performing calculations and searches on has_many through relationships.
* Instead of merging the find_options myself, I delegated that to AR's with_scope function, which already does this. Much more solid, less intrusive.

== 1.0.3 released 2008-09-18

* Updated inspect to show the current options for your search. Plays nicer in the console.
* Made sure protection state is persistent among relationship conditions.
* Fixed bug with backwards compatibility of rails. concat requires a proc in older version.
* Defaulted remote control types to use GET requests instead of POST.
* Completely reengineered integration with ActiveRecord. Searchlogic is properly using scopes letting you do use serachgasm where scope are implemented. @current_users.orders.new_search, etc. If your search is scoped and you want a search object, that search object will represent a new search in the context of those scopes, meaning the scopes get merged into Searchlogic as options.
* Dropped support for Searchlogic functionality when defining relationships: has_many :order, :conditions => {:total_gt => 100}, will not work anymore. It's a chicken and the egg thing. Searchlogic needs AR constants, some models get loaded before others, therefore the Order model may not have been loaded yet, causing an unknown constant error.
* Clean up redundant code and moved it into the Searchlogic::Shared namespace.

== 1.0.2 released 2008-09-12

* Moved cached searchers out of the global namespace and into the Searchlogic::Cache namespce.
* Various changes to improve performance through profiling / benchmarking. http://pastie.org/271936
* Config.per_page works with new_search & new_search! only. Where as before it was only working if the search was protected.

== 1.0.1 released 2008-09-11

* Cached "searchers" so when a new search object is instantiated it doesn't go through all of the meta programming and method creation. Helps a lot with performance. You will see the speed benefits after the first instantiation.
* Added in new options for page_links.
* Fixed minor bugs when doing page_links.
* Updated documentation to be more detailed and inclusive.

== 1.0.0 released 2008-09-08

* Major changes in the helpers, they were completely re-engineered. Hence the new version. I established a pattern between all helpers giving you complete flexibility as to how they are used. All helpers are called differently now (see documentation).

== 0.9.10 released 2008-09-08

* Fixed bug with setting the per_page configuration to only take effect on protected searches, thus staying out of the way of normal searching.
* Hardened more tests

== 0.9.9 released 2008-09-07

* Fixed setting per_page to nil, false, or ''. This is done to "show all" results.

== 0.9.8 released 2008-09-06

* Fixed order_by helper bug when guessing the text with arrays. Should use the first value instead of last.
* Added in per_page config option.

== 0.9.7 released 2008-09-06

* Complete class restructure. Moved the 3 main components into their own base level class: Search, Conditions, Condition
* Split logic and functionality into their own modules, implemented via alias_chain_method
* Added in helpers for using in a rails app
* Added link to documentation and live example in README
* Various small bug fixes
* Hardened tests

== 0.9.6 released 2008-09-04

* Fixed bug when instantiating with nil options

== 0.9.5 released 2008-09-03

* Enhanced searching with conditions only, added in search methods and calculations
* Updated README to include examples

== 0.9.4 released 2008-09-03

* Cleaned up search methods
* Removed reset! method for both searching and searching by conditions

== 0.9.3 released 2008-09-02

* Changed structure of conditions to have their own class
* Added API for adding your own conditions.

== 0.9.2 released 2008-09-02

* Enhanced protection from SQL injections (made more efficient)

== 0.9.1 released 2008-09-02

* Added aliases for datetime, date, time, and timestamp attrs. You could call created_at_after, now you can also call created_after. Just removed the "at" requirement.

== 0.9.0 released 2008-09-01

* First release